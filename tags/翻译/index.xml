<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>翻译 on 八股文</title>
    <link>https://justzyx.github.io/tags/%E7%BF%BB%E8%AF%91/</link>
    <description>Recent content in 翻译 on 八股文</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 19 Mar 2020 23:48:00 +0800</lastBuildDate><atom:link href="https://justzyx.github.io/tags/%E7%BF%BB%E8%AF%91/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AngularJs Git 提交规范</title>
      <link>https://justzyx.github.io/blog/2020-03-19-angular-js-git-commit-conventions/</link>
      <pubDate>Thu, 19 Mar 2020 23:48:00 +0800</pubDate>
      
      <guid>https://justzyx.github.io/blog/2020-03-19-angular-js-git-commit-conventions/</guid>
      <description>在给Github上开源项目做出Contribution的时候我们要遵循其所规定提交规范。如Redis、AngularJs等项目均有自己的Contribution约束。也有一些学习资料类的高星项目缺乏提交约束，此时我一般会遵循AngularJs的提交规范来PR，个人觉得这份规范具有很强的借鉴性，比较适合作为团队合作的规范，鉴于尚无中文版本，所以我打算翻译一下以供大家参考：
格式 #  &amp;lt;type&amp;gt;(&amp;lt;scope&amp;gt;): &amp;lt;subject&amp;gt; //消息头 &amp;lt;BLANK LINE&amp;gt; //空行 &amp;lt;body&amp;gt; //正文 &amp;lt;BLANK LINE&amp;gt; //空行 &amp;lt;footer&amp;gt; //消息尾  为了兼容多种工具方便阅读git message，禁止每一行超过100个字符！ 一条commit message包含了header、body和footer，它们之间用空行分隔。  回滚 #  如果当前提交回滚了上一次的提交，它的头部应该以revert: 开头，紧接着是被回滚的提交记录的头部。body应该描述成This reverts commit &amp;lt;hash&amp;gt;.，hash是被回滚的提交记录的SHA值。
消息头 #  消息头是单独的一行，对改动作出了简洁的描述，包含了type，scope(可选)以及标题
type(类型) #   添加功能特性：feat (feature) 修复BUG：fix (bug fix) 添加文档：docs (documentation) 代码风格：style (formatting, missing semi colons, …) 重构：refactor 添加测试用例：test (when adding missing tests) chore (maintain)  scope(改动涉及区域) #  scope要能够表明改动的区域。举个例子, $location, $browser, $compile, $rootScope, ngHref, ngClick, ngView, etc&amp;hellip;这种按照模块来划分，如果是后端的话，通常会分层架构，可以按照接口粒度(user/login), 也可以按照service(UserService)、model(UserModel)的粒度</description>
    </item>
    
  </channel>
</rss>
